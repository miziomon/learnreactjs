
var data = [
  {id: 1, author: "Pete Hunt", text: "This is one comment"},
  {id: 2, author: "Jordan Walke", text: "This is *another* comment"},
  {id: 3, author: "fdsf asd ", text: "This is *another* comment"},
  {id: 4, author: "dfsaf sa ds", text: "This is *another* comment"}
];

var CommentList_old = React.createClass({
  render: function() {
    return (
      <div className="commentList">
                <Comment author="Pete Hunt">This is <b>one</b> comment</Comment>
        <Comment author="Jordan Walke">This is *another* <i>comment</i></Comment>
      </div>
    );
  }
});

// ----------------------------

var CommentList = React.createClass({
  render: function() {
    var commentNodes = this.props.data.map(function(comment) {
      return (
        <Comment author={comment.author} key={comment.id}>
          {comment.text}
        </Comment>
      );
    });
    return (
      <div className="commentList">
        {commentNodes}
      </div>
    );
  }
});


// ------------------------------

var CommentForm = React.createClass({

  getInitialState: function() {
    return {author: '', text: ''};
  },
  
  handleAuthorChange: function(e) {
    this.setState({author: e.target.value});
  },
  handleTextChange: function(e) {
    this.setState({text: e.target.value});
  },

  handleSubmit: function(e) {
    e.preventDefault();
    var author = this.state.author.trim();
    var text = this.state.text.trim();
    if (!text || !author) {
      return;
    }
    
    console.log("commit sono nel form");
    this.props.onCommentSubmit({author: author, text: text});

    this.setState({author: '', text: ''});
  },

  render: function() {
    return (
      <form className="commentForm" onSubmit={this.handleSubmit}>
        <input
          type="text"
          placeholder="Your name"
          value={this.state.author}
          onChange={this.handleAuthorChange}
        />
        <input
          type="text"
          placeholder="Say something..."
          value={this.state.text}
          onChange={this.handleTextChange}
        />
        <input type="submit" value="Post" />
      </form>
    );
  }
});


// ------------------------------

var Comment = React.createClass({
  render: function() {
    return (
      <div className="comment">
        <h2 className="commentAuthor">
          {this.props.author}
        </h2>
        {this.props.children}
      </div>
    );
  }
});

// -------------------------------


var CommentBox = React.createClass({


handleCommentSubmit: function(comment) {
        console.log("ok aggiorno la lista in quanto invocato evento");

        var comments = this.state.data;
        // Optimistically set an id on the new comment. It will be replaced by an
        // id generated by the server. In a production application you would likely
        // not use Date.now() for this and would have a more robust system in place.
        comment.id = Date.now();
        var newComments = comments.concat([comment]);
        this.setState({data: newComments});

  },

  getInitialState: function() {
    return {data: []};
  },

  loadCommentsFromServer: function() {

     this.setState({data: [
        {id: 1, author: "Pete Hunt", text: "This is one comment"},
        {id: 2, author: "Jordan Walke", text: "This is *another* comment"},
        {id: 3, author: "fdsf asd ", text: "This is *another* comment"},
        {id: 4, author: "dfsaf sa ds", text: "This is *another* comment"},
{id: 5, author: "davide", text: "pppppppppppppppppp"}
      ]});

    console.log("polling from server");
   
  },

  componentDidMount: function() {
    
   this.loadCommentsFromServer();
    // setInterval(this.loadCommentsFromServer, this.props.pollInterval);
    
  },

  render: function() {
    return (
      <div className="commentBox">
        <h1>Nuovo messaggio</h1>
        <CommentForm onCommentSubmit={this.handleCommentSubmit} />        
        <h1>Comments</h1>
        <CommentList data={this.state.data} />
        
      </div>
    );
  }
});

ReactDOM.render(
  <CommentBox url="/api/test.json" pollInterval={2000} xxxdata={data} />,
  document.getElementById('content')
);